# Generated by Django 3.2.2 on 2021-05-24 17:08

from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда присоединился')),
                ('tg_username', models.CharField(blank=True, default='', max_length=64, verbose_name='Юзернейм в Telegram')),
                ('tg_first_name', models.CharField(blank=True, default='', max_length=64, verbose_name='Имя в Telegram')),
                ('tg_chat_id', models.PositiveIntegerField(db_index=True, unique=True, verbose_name='Telegram chat ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, db_index=True, max_length=128, null=True, region=None, verbose_name='Телефон')),
                ('quality_setting', models.CharField(choices=[('Best Coverage Settings', 'Высокое качество распознавания'), ('Best Speed Settings', 'Высокая скорость распознавания'), ('Balance Settings', 'Сбалансированные настройки'), ('Ultimate Coverage Settings', 'Максимальное качество распознавания')], db_index=True, default='Ultimate Coverage Settings', max_length=30, verbose_name='Настройка качества распознования qr-кодов')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'ordering': ['-date_joined'],
            },
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Когда загружен')),
                ('image', models.ImageField(upload_to='receipts', verbose_name='Фото чека')),
                ('qr_recognized', models.CharField(blank=True, db_index=True, default='', max_length=128, verbose_name='Распознанный qr')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='receipts', to='draw_app.customer', verbose_name='Участник')),
            ],
            options={
                'verbose_name': 'Чек',
                'verbose_name_plural': 'Чеки',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReceiptRecognitionOuterRequestStat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_to', models.CharField(choices=[('dynamsoft', 'чтение qr-кодов'), ('fns_api', 'получение данных из ФНС')], db_index=True, max_length=25, verbose_name='Наименование сервиса для анализа чека')),
                ('start_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время отправки чека для анализа')),
                ('end_time', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время получения ответа')),
                ('reason_for_failure', models.CharField(blank=True, db_index=True, max_length=255, verbose_name='Причина неудачи анализа чека')),
                ('dynamsoft_quality_setting', models.CharField(blank=True, db_index=True, max_length=30, verbose_name='Настройка качества распознования qr-кодов')),
                ('receipt', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='draw_app.receipt', verbose_name='Чек')),
            ],
            options={
                'verbose_name': 'Статистика распознования (qr коды и ФНС)',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='FnsOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_requested_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Время первого запроса')),
                ('last_requested_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Время последнего запроса')),
                ('check_ticket_info', models.CharField(blank=True, db_index=True, default='', max_length=128, verbose_name='Распознанный qr')),
                ('status', models.CharField(choices=[('raw', 'не обработан'), ('sent', 'отправлен'), ('received', 'получен'), ('closed', 'закрыт')], db_index=True, default='raw', max_length=25, verbose_name='Статус')),
                ('answer', models.JSONField(db_index=True, default=dict, verbose_name='Ответ налоговой')),
                ('receipt', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fns_orders', to='draw_app.receipt', verbose_name='Чек')),
            ],
            options={
                'verbose_name': 'Запрос к ФНС',
                'verbose_name_plural': 'Запросы к ФНС',
                'ordering': ['-last_requested_at'],
            },
        ),
    ]
